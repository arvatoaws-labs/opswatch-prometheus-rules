---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    release: prometheus
    app: prometheus-operator
  name: opswatch.alb.rules
  namespace: monitoring
spec:
  groups:
    - name: alb.rules
      rules:
        - alert: AwsCloudwatchAlbTargetResponseTimeSlow
          annotations:
            summary: ALB target response time is greater than 10s
            description: ALB target response time is {{$value}}s for LB {{ $labels.dimension_LoadBalancer }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook: Should be caused by something behind the ALB reaching a limitation. It could be the application itself in its resources or scalability, or a database or similar managed AWS service reaching the limits of its capabiltiy. Check if any of these seem highly utilized. If present in the architecture the application could also be waiting for an external dependency to respond, but depending on our access that might be hard to check for. At best you might find references to slow or failed external calls in the application logs.
          expr: round(aws_cloudwatch_ApplicationELB_TargetResponseTime_LoadBalancer) > 10
          for: 15m
          labels:
            rule_source: opswatch-prometheus-rules
            severity: info
        - alert: AwsCloudwatchAlbTargetGroupRatioHealthyHosts
          annotations:
            summary: ALB TargetGroup ratio of healthy hosts is below 50%
            description: ALB TargetGroup health ratio is {{$value}}% for LB {{ $labels.dimension_LoadBalancer }} & TargetGroup {{ $labels.dimension_TargetGroup }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook_url: https://aws.amazon.com/de/premiumsupport/knowledge-center/elb-fix-failing-health-checks-alb/
          expr: round(aws_cloudwatch_ApplicationELB_HealthyHostCount_LoadBalancer_TargetGroup / ( aws_cloudwatch_ApplicationELB_HealthyHostCount_LoadBalancer_TargetGroup + aws_cloudwatch_ApplicationELB_UnHealthyHostCount_LoadBalancer_TargetGroup ) * 100 ) < 50
          for: 15m
          labels:
            rule_source: opswatch-prometheus-rules
            severity: critical
        - alert: AwsCloudwatchAlbTargetGroupZeroHealthyHosts
          annotations:
            summary: ALB TargetGroup number of healthy hosts is 0
            description: ALB TargetGroup number of health hosts is {{$value}} for LB {{ $labels.dimension_LoadBalancer }} & TargetGroup {{ $labels.dimension_TargetGroup }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook_url: https://aws.amazon.com/de/premiumsupport/knowledge-center/elb-fix-failing-health-checks-alb/
          expr: aws_cloudwatch_ApplicationELB_HealthyHostCount_LoadBalancer_TargetGroup == 0
          for: 15m
          labels:
            rule_source: opswatch-prometheus-rules
            severity: critical
        - alert: AwsCloudwatchAlbTargetGroupResponseTimeSlow
          annotations:
            summary: ALB TargetGroup response time is greater than 10s
            description: ALB TargetGroup response time is {{$value}}s for LB {{ $labels.dimension_LoadBalancer }} & TargetGroup {{ $labels.dimension_TargetGroup }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook_url: https://aws.amazon.com/de/premiumsupport/knowledge-center/elb-fix-failing-health-checks-alb/
          expr: round(aws_cloudwatch_ApplicationELB_TargetResponseTime_LoadBalancer_TargetGroup) > 10
          for: 15m
          labels:
            rule_source: opswatch-prometheus-rules
            severity: info
        - record: aws_cloudwatch_ApplicationELB_HTTPCodeTargetCount_LoadBalancer_TargetGroup_sum
          expr: label_replace(aws_cloudwatch_ApplicationELB_HTTPCodeTarget2XXCount_LoadBalancer_TargetGroup_sum, "http_code", "2xx", "__name__", "(.+)")
        - record: aws_cloudwatch_ApplicationELB_HTTPCodeTargetCount_LoadBalancer_TargetGroup_sum
          expr: label_replace(aws_cloudwatch_ApplicationELB_HTTPCodeTarget3XXCount_LoadBalancer_TargetGroup_sum, "http_code", "3xx", "__name__", "(.+)")
        - record: aws_cloudwatch_ApplicationELB_HTTPCodeTargetCount_LoadBalancer_TargetGroup_sum
          expr: label_replace(aws_cloudwatch_ApplicationELB_HTTPCodeTarget4XXCount_LoadBalancer_TargetGroup_sum, "http_code", "4xx", "__name__", "(.+)")
        - record: aws_cloudwatch_ApplicationELB_HTTPCodeTargetCount_LoadBalancer_TargetGroup_sum
          expr: label_replace(aws_cloudwatch_ApplicationELB_HTTPCodeTarget5XXCount_LoadBalancer_TargetGroup_sum, "http_code", "5xx", "__name__", "(.+)")
        - alert: AwsCloudwatchAlbTargetGroupErrorRate5xx
          annotations:
            summary: ALB TargetGroup 5xx Error ratio is greater than 20%
            description: ALB TargetGroup 5xx error rate is {{$value}}% for LB {{ $labels.dimension_LoadBalancer }} & TargetGroup {{ $labels.dimension_TargetGroup }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook_url: https://aws.amazon.com/de/premiumsupport/knowledge-center/elb-fix-failing-health-checks-alb/
          expr: round(sum without(http_code) (rate(aws_cloudwatch_ApplicationELB_HTTPCodeTargetCount_LoadBalancer_TargetGroup_sum{http_code="5xx"}[15m])) / (sum without(http_code) (rate(aws_cloudwatch_ApplicationELB_HTTPCodeTargetCount_LoadBalancer_TargetGroup_sum[15m])) + 0.000000000001) * 100) > 20
          for: 15m
          labels:
            rule_source: opswatch-prometheus-rules
            severity: info
        - alert: AwsCloudwatchAlbTargetGroupErrorRate4xx
          annotations:
            summary: ALB TargetGroup 4xx Error ratio is greater than 30%
            description: ALB TargetGroup 4xx error rate is {{$value}}% for LB {{ $labels.dimension_LoadBalancer }} & TargetGroup {{ $labels.dimension_TargetGroup }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook_url: https://aws.amazon.com/de/premiumsupport/knowledge-center/elb-fix-failing-health-checks-alb/
          expr: round(sum without(http_code) (rate(aws_cloudwatch_ApplicationELB_HTTPCodeTargetCount_LoadBalancer_TargetGroup_sum{http_code="4xx"}[15m])) / (sum without(http_code) (rate(aws_cloudwatch_ApplicationELB_HTTPCodeTargetCount_LoadBalancer_TargetGroup_sum[15m])) + 0.000000000001) * 100) > 30
          for: 15m
          labels:
            rule_source: opswatch-prometheus-rules
            severity: info
