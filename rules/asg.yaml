apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    release: prometheus
    app: prometheus-operator
  name: opswatch.asg.rules
  namespace: monitoring
spec:
  groups:
    - name: asg.rules
      rules:
        - alert: AwsCloudwatchAutoScalingMaxCapacityReached
          annotations:
            summary: ASG max capacity reached
            description: ASG max capacity reached for group {{ $labels.dimension_AutoScalingGroupName }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook_url: https://docs.aws.amazon.com/autoscaling/ec2/userguide/CHAP_Troubleshooting.html
          expr: aws_cloudwatch_AutoScaling_GroupDesiredCapacity_AutoScalingGroupName_max == aws_cloudwatch_AutoScaling_GroupMaxSize_AutoScalingGroupName_max and aws_cloudwatch_AutoScaling_GroupMaxSize_AutoScalingGroupName_max > 2
          for: 30m
          labels:
            severity: warning
        - alert: AwsCloudwatchAutoScalingZeroInServiceHosts
          annotations:
            summary: ASG number of in service hosts is 0
            description: ASG number of in service hosts is zero for group {{ $labels.dimension_AutoScalingGroupName }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook_url: https://docs.aws.amazon.com/autoscaling/ec2/userguide/CHAP_Troubleshooting.html
          expr: aws_cloudwatch_AutoScaling_GroupInServiceInstances_AutoScalingGroupName == 0 and aws_cloudwatch_AutoScaling_GroupDesiredCapacity_AutoScalingGroupName > 0
          for: 15m
          labels:
            severity: critical
            asy_itsm_severity: high
        - alert: AwsCloudwatchAutoScalingRatioInServiceHosts
          annotations:
            summary: ASG ratio of in service hostss is below 50%
            description: ASG number of in service hosts ratio is {{$value}}% for group {{ $labels.dimension_AutoScalingGroupName }} & TargetGroup {{ $labels.dimension_TargetGroup }} in customer {{ $labels.overwrite_asy_customer }} account {{ $labels.overwrite_aws_account_id }} region {{ $labels.overwrite_aws_region }}
            runbook_url: https://docs.aws.amazon.com/autoscaling/ec2/userguide/CHAP_Troubleshooting.html
          expr: round(aws_cloudwatch_AutoScaling_GroupInServiceInstances_AutoScalingGroupName / aws_cloudwatch_AutoScaling_GroupTotalInstances_AutoScalingGroupName * 100 ) < 50
          for: 30m
          labels:
            severity: critical
# TODO: lambda sensu saas check too many terminated instances after each other?